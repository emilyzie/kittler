{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/FriendsBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../../supabaseClient'; // Adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendsBar = ({\n  userId\n}) => {\n  _s();\n  const [friendName, setFriendName] = useState('');\n  const [selectedFriendId, setSelectedFriendId] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const searchFriends = async event => {\n    const name = event.target.value;\n    setFriendName(name);\n    if (name.length >= 3) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('profiles').select('username, user_id').ilike('username', `%${name}%`);\n        if (error) throw error;\n        setSearchResults(data);\n        setShowDropdown(true);\n      } catch (error) {\n        console.error('Error searching for friends:', error.message);\n        setSearchResults([]);\n      }\n    } else {\n      setSearchResults([]);\n      setShowDropdown(false);\n    }\n  };\n  const handleSelectFriend = friendId => {\n    setSelectedFriendId(friendId);\n    const friend = searchResults.find(friend => friend.user_id === friendId);\n    setFriendName(friend ? friend.username : '');\n    console.log('Selected friend:', friend);\n    setShowDropdown(false);\n  };\n  const sendFriendRequest = async () => {\n    if (!selectedFriendId) return;\n    try {\n      const {\n        error\n      } = await supabase.from('friend_requests').insert([{\n        sender_id: userId,\n        receiver_id: selectedFriendId\n      }]);\n      if (error) throw error;\n      alert('Friend request sent!');\n    } catch (error) {\n      console.error('Error sending friend request:', error.message);\n    }\n  };\n  const handleKeypress = e => {\n    if (e.keyCode === 13) {\n      sendFriendRequest();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter friend's name\",\n        value: friendName,\n        onChange: searchFriends,\n        onKeypress: handleKeypress,\n        className: \"border p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendFriendRequest,\n        className: \"ml-2 btn bg-blue-500 hover:bg-blue-700 text-white\",\n        children: \"Send Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), showDropdown && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute mt-1 w-52 bg-white shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-2 hover:bg-gray-200 cursor-pointer\",\n          onClick: () => handleSelectFriend(friend.user_id),\n          children: friend.username\n        }, friend.user_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendsBar, \"pNYbqz2E+qVBt3y0yv4xPBqyNr4=\");\n_c = FriendsBar;\nexport default FriendsBar;\nvar _c;\n$RefreshReg$(_c, \"FriendsBar\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","FriendsBar","userId","_s","friendName","setFriendName","selectedFriendId","setSelectedFriendId","searchResults","setSearchResults","showDropdown","setShowDropdown","searchFriends","event","name","target","value","length","data","error","from","select","ilike","console","message","handleSelectFriend","friendId","friend","find","user_id","username","log","sendFriendRequest","insert","sender_id","receiver_id","alert","handleKeypress","e","keyCode","className","children","type","placeholder","onChange","onKeypress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/FriendsBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../../supabaseClient';  // Adjust path as needed\n\nconst FriendsBar = ({ userId }) => {\n    const [friendName, setFriendName] = useState('');\n    const [selectedFriendId, setSelectedFriendId] = useState(null);\n    const [searchResults, setSearchResults] = useState([]);\n    const [showDropdown, setShowDropdown] = useState(false);\n\n    const searchFriends = async (event) => {\n        const name = event.target.value;\n        setFriendName(name);\n        if (name.length >= 3) { \n            try {\n                const { data, error } = await supabase\n                    .from('profiles')\n                    .select('username, user_id')\n                    .ilike('username', `%${name}%`);\n                \n                if (error) throw error;\n                \n                setSearchResults(data);\n                setShowDropdown(true);\n            } catch (error) {\n                console.error('Error searching for friends:', error.message);\n                setSearchResults([]);\n            }\n        } else {\n            setSearchResults([]);\n            setShowDropdown(false);\n        }\n    };\n\n    const handleSelectFriend = (friendId) => {\n        setSelectedFriendId(friendId);\n        const friend = searchResults.find(friend => friend.user_id === friendId);\n        setFriendName(friend ? friend.username : '');\n\n        console.log('Selected friend:', friend);   \n        setShowDropdown(false);\n    };\n\n    const sendFriendRequest = async () => {\n        if (!selectedFriendId) return;\n\n        try {\n            const { error } = await supabase\n                .from('friend_requests')\n                .insert([{ sender_id: userId, receiver_id: selectedFriendId }]);\n\n            if (error) throw error;\n            alert('Friend request sent!');\n        } catch (error) {\n            console.error('Error sending friend request:', error.message);\n        }\n    };\n\n    const handleKeypress = e => {\n        if (e.keyCode === 13) {\n            sendFriendRequest();\n        }\n    };\n\n    return (\n        <div className=\"relative\">\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter friend's name\"\n                    value={friendName}\n                    onChange={searchFriends}\n                    onKeypress={handleKeypress}\n                    className=\"border p-2\"\n                />\n                <button onClick={sendFriendRequest} className=\"ml-2 btn bg-blue-500 hover:bg-blue-700 text-white\">\n                    Send Request\n                </button>\n            </form>\n            {showDropdown && searchResults.length > 0 && (\n                <div className=\"absolute mt-1 w-52 bg-white shadow-lg\">\n                    <ul>\n                        {searchResults.map(friend => (\n                            <li key={friend.user_id} className=\"p-2 hover:bg-gray-200 cursor-pointer\"\n                                onClick={() => handleSelectFriend(friend.user_id)}>\n                                {friend.username}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default FriendsBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMe,aAAa,GAAG,MAAOC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC/BX,aAAa,CAACS,IAAI,CAAC;IACnB,IAAIA,IAAI,CAACG,MAAM,IAAI,CAAC,EAAE;MAClB,IAAI;QACA,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAMrB,QAAQ,CACjCsB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,mBAAmB,CAAC,CAC3BC,KAAK,CAAC,UAAU,EAAG,IAAGR,IAAK,GAAE,CAAC;QAEnC,IAAIK,KAAK,EAAE,MAAMA,KAAK;QAEtBV,gBAAgB,CAACS,IAAI,CAAC;QACtBP,eAAe,CAAC,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZI,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACK,OAAO,CAAC;QAC5Df,gBAAgB,CAAC,EAAE,CAAC;MACxB;IACJ,CAAC,MAAM;MACHA,gBAAgB,CAAC,EAAE,CAAC;MACpBE,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,MAAMc,kBAAkB,GAAIC,QAAQ,IAAK;IACrCnB,mBAAmB,CAACmB,QAAQ,CAAC;IAC7B,MAAMC,MAAM,GAAGnB,aAAa,CAACoB,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,OAAO,KAAKH,QAAQ,CAAC;IACxErB,aAAa,CAACsB,MAAM,GAAGA,MAAM,CAACG,QAAQ,GAAG,EAAE,CAAC;IAE5CP,OAAO,CAACQ,GAAG,CAAC,kBAAkB,EAAEJ,MAAM,CAAC;IACvChB,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMqB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAC1B,gBAAgB,EAAE;IAEvB,IAAI;MACA,MAAM;QAAEa;MAAM,CAAC,GAAG,MAAMrB,QAAQ,CAC3BsB,IAAI,CAAC,iBAAiB,CAAC,CACvBa,MAAM,CAAC,CAAC;QAAEC,SAAS,EAAEhC,MAAM;QAAEiC,WAAW,EAAE7B;MAAiB,CAAC,CAAC,CAAC;MAEnE,IAAIa,KAAK,EAAE,MAAMA,KAAK;MACtBiB,KAAK,CAAC,sBAAsB,CAAC;IACjC,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZI,OAAO,CAACJ,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACK,OAAO,CAAC;IACjE;EACJ,CAAC;EAED,MAAMa,cAAc,GAAGC,CAAC,IAAI;IACxB,IAAIA,CAAC,CAACC,OAAO,KAAK,EAAE,EAAE;MAClBP,iBAAiB,CAAC,CAAC;IACvB;EACJ,CAAC;EAED,oBACIhC,OAAA;IAAKwC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBzC,OAAA;MAAAyC,QAAA,gBACIzC,OAAA;QACI0C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,qBAAqB;QACjC3B,KAAK,EAAEZ,UAAW;QAClBwC,QAAQ,EAAEhC,aAAc;QACxBiC,UAAU,EAAER,cAAe;QAC3BG,SAAS,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFjD,OAAA;QAAQkD,OAAO,EAAElB,iBAAkB;QAACQ,SAAS,EAAC,mDAAmD;QAAAC,QAAA,EAAC;MAElG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EACNvC,YAAY,IAAIF,aAAa,CAACS,MAAM,GAAG,CAAC,iBACrCjB,OAAA;MAAKwC,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eAClDzC,OAAA;QAAAyC,QAAA,EACKjC,aAAa,CAAC2C,GAAG,CAACxB,MAAM,iBACrB3B,OAAA;UAAyBwC,SAAS,EAAC,sCAAsC;UACrEU,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAACE,MAAM,CAACE,OAAO,CAAE;UAAAY,QAAA,EACjDd,MAAM,CAACG;QAAQ,GAFXH,MAAM,CAACE,OAAO;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGnB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9C,EAAA,CAzFIF,UAAU;AAAAmD,EAAA,GAAVnD,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}