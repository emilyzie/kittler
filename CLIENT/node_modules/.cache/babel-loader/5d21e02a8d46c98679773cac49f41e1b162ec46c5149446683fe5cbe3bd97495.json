{"ast":null,"code":"var _s = $RefreshSig$();\n// supabaseClient.js\nimport { createClient } from '@supabase/supabase-js';\nimport React from 'react';\nimport { useSession } from '@clerk/clerk-react';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nfunction createClerkSupabaseClient() {\n  _s();\n  const {\n    session\n  } = useSession();\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    global: {\n      fetch: async (url, options = {}) => {\n        const clerkToken = await session.getToken({\n          template: 'supabase'\n        });\n        const headers = new Headers(options.headers);\n        headers.set('Authorization', `Bearer ${clerkToken}`);\n        return fetch(url, {\n          ...options,\n          headers\n        });\n      }\n    }\n  });\n}\n_s(createClerkSupabaseClient, \"PbFIfGNjJVqsyKHphpRC4MhOn2w=\", false, function () {\n  return [useSession];\n});\nconst supabase = createClerkSupabaseClient();\nexport default supabase;","map":{"version":3,"names":["createClient","React","useSession","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","createClerkSupabaseClient","_s","session","global","fetch","url","options","clerkToken","getToken","template","headers","Headers","set","supabase"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/supabaseClient.js"],"sourcesContent":["// supabaseClient.js\nimport { createClient } from '@supabase/supabase-js';\nimport React from 'react';\nimport { useSession } from '@clerk/clerk-react';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nfunction createClerkSupabaseClient() {\n  const { session } = useSession();\n\n  return createClient(\n    supabaseUrl,\n    supabaseAnonKey,\n    {\n      global: {\n        fetch: async (url, options = {}) => {\n          const clerkToken = await session.getToken({ template: 'supabase' });\n          const headers = new Headers(options.headers);\n          headers.set('Authorization', `Bearer ${clerkToken}`);\n          return fetch(url, { ...options, headers });\n        }\n      }\n    }\n  );\n}\n\nconst supabase = createClerkSupabaseClient();\nexport default supabase;\n"],"mappings":";AAAA;AACA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAE/D,SAASC,yBAAyBA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAQ,CAAC,GAAGT,UAAU,CAAC,CAAC;EAEhC,OAAOF,YAAY,CACjBG,WAAW,EACXI,eAAe,EACf;IACEK,MAAM,EAAE;MACNC,KAAK,EAAE,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;QAClC,MAAMC,UAAU,GAAG,MAAML,OAAO,CAACM,QAAQ,CAAC;UAAEC,QAAQ,EAAE;QAAW,CAAC,CAAC;QACnE,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAACL,OAAO,CAACI,OAAO,CAAC;QAC5CA,OAAO,CAACE,GAAG,CAAC,eAAe,EAAG,UAASL,UAAW,EAAC,CAAC;QACpD,OAAOH,KAAK,CAACC,GAAG,EAAE;UAAE,GAAGC,OAAO;UAAEI;QAAQ,CAAC,CAAC;MAC5C;IACF;EACF,CACF,CAAC;AACH;AAACT,EAAA,CAjBQD,yBAAyB;EAAA,QACZP,UAAU;AAAA;AAkBhC,MAAMoB,QAAQ,GAAGb,yBAAyB,CAAC,CAAC;AAC5C,eAAea,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}