{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const [newMedia, setNewMedia] = useState('');\n  const [medium, setMedium] = useState('Movie');\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  useEffect(() => {\n    fetchMediaItems();\n  }, [watchlistName]);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlist) {\n      const {\n        data: media\n      } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id);\n      setMediaItems(media || []);\n    }\n  };\n  const addMediaItem = async () => {\n    if (!newMedia || !medium) return;\n    const {\n      data: watchlist\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlist) {\n      const {\n        data: newMedium\n      } = await supabase.from('media_items').insert([{\n        title: newMedia,\n        watchlist_id: watchlist.id,\n        medium\n      }]).select();\n      if (newMedium) {\n        setMediaItems([...mediaItems, ...newMedium]);\n        setNewMedia('');\n        setMedium('Movie');\n      }\n    }\n  };\n  const handleDeleteMediaItem = deletedId => {\n    setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), mediaItems.map(item => /*#__PURE__*/_jsxDEV(MovieCard, {\n      id: item.id,\n      title: item.title,\n      medium: item.medium,\n      length: item.length,\n      date: item.date,\n      synopsis: item.synopsis,\n      onDelete: handleDeleteMediaItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMedia,\n      onChange: e => setNewMedia(e.target.value),\n      placeholder: \"Add New Media\",\n      className: \"border p-2 mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: medium,\n      onChange: e => setMedium(e.target.value),\n      className: \"border p-2 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Movie\",\n        children: \"Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Book\",\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"YouTube\",\n        children: \"YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"TV\",\n        children: \"TV Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMediaItem,\n      className: \"ml-2 bg-blue-500 text-white p-2 rounded\",\n      children: \"Add Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"ACb4GfZ+nvmA1a4amHO2bdRsF7k=\", false, function () {\n  return [useParams];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","supabase","MovieCard","jsxDEV","_jsxDEV","MediaPage","_s","mediaItems","setMediaItems","newMedia","setNewMedia","medium","setMedium","username","watchlistName","fetchMediaItems","data","watchlist","from","select","eq","single","media","id","addMediaItem","newMedium","insert","title","watchlist_id","handleDeleteMediaItem","deletedId","currentMediaItems","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","length","date","synopsis","onDelete","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const [newMedia, setNewMedia] = useState('');\n    const [medium, setMedium] = useState('Movie');\n    const { username, watchlistName } = useParams();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, [watchlistName]);\n\n    const fetchMediaItems = async () => {\n        const { data: watchlist } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlist) {\n            const { data: media } = await supabase\n                .from('media_items')\n                .select('*')\n                .eq('watchlist_id', watchlist.id);\n                \n            setMediaItems(media || []);\n        }\n    };\n\n    const addMediaItem = async () => {\n        if (!newMedia || !medium) return;\n\n        const { data: watchlist } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlist) {\n            const { data: newMedium } = await supabase\n                .from('media_items')\n                .insert([{ title: newMedia, watchlist_id: watchlist.id, medium }])\n                .select();\n\n            if (newMedium) {\n                setMediaItems([...mediaItems, ...newMedium]);\n                setNewMedia('');\n                setMedium('Movie');\n            }\n        }\n    };\n    \n    const handleDeleteMediaItem = (deletedId) => {\n        setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n    };\n    \n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            {mediaItems.map((item) => (\n                <MovieCard \n                    key={item.id} \n                    id={item.id} \n                    title={item.title} \n                    medium={item.medium} \n                    length={item.length} \n                    date={item.date} \n                    synopsis={item.synopsis} \n                    onDelete={handleDeleteMediaItem} \n                />\n            \n            ))}\n            <input\n                type=\"text\"\n                value={newMedia}\n                onChange={(e) => setNewMedia(e.target.value)}\n                placeholder=\"Add New Media\"\n                className=\"border p-2 mt-4\"\n            />\n            <select\n                value={medium}\n                onChange={(e) => setMedium(e.target.value)}\n                className=\"border p-2 mt-4\"\n            >\n                <option value=\"Movie\">Movie</option>\n                <option value=\"Book\">Book</option>\n                <option value=\"YouTube\">YouTube</option>\n                <option value=\"TV\">TV Show</option>\n            </select>\n            <button onClick={addMediaItem} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n                Add Media\n            </button>\n        </div>\n    );\n};\n\nexport default MediaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}