{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/WatchlistPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../utils/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchlistPage = () => {\n  _s();\n  const [watchlists, setWatchlists] = useState([]);\n  const [watchlistName, setWatchlistName] = useState('');\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      const {\n        data: profile,\n        error\n      } = await supabase.from('profiles').select('username').eq('user_id', user.id).single();\n      if (error) {\n        console.error('Error fetching user data:', error.message);\n        navigate('/');\n      } else {\n        setUsername(profile.username);\n        fetchWatchlists(user.id);\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchWatchlists = async userId => {\n    // Query to fetch watchlists that the user owns\n    const ownWatchlistsQuery = supabase.from('watchlists').select('*').eq('user_id', userId);\n\n    // Query to fetch watchlists that are shared with the user\n    const sharedWatchlistsQuery = supabase.from('watchlist_shares').select(`\n                watchlist_id,\n                watchlist:watchlist_id (id, name, user_id)  // Assuming a foreign key from watchlist_shares to watchlists\n            `).eq('shared_with_user_id', userId);\n    try {\n      let {\n        data: ownWatchlists,\n        error: ownError\n      } = await ownWatchlistsQuery;\n      let {\n        data: sharedWatchlistsData,\n        error: sharedError\n      } = await sharedWatchlistsQuery;\n      if (ownError) {\n        console.error('Error fetching own watchlists:', ownError.message);\n        return;\n      }\n      if (sharedError) {\n        console.error('Error fetching shared watchlists:', sharedError.message);\n        return;\n      }\n\n      // Map shared watchlists to have the same structure as own watchlists\n      const sharedWatchlists = sharedWatchlistsData.map(item => item.watchlist);\n\n      // Combine own and shared watchlists\n      const combinedWatchlists = [...ownWatchlists, ...sharedWatchlists];\n      setWatchlists(combinedWatchlists);\n    } catch (error) {\n      console.error('Error fetching watchlists:', error.message);\n    }\n  };\n  const createWatchlist = async () => {\n    if (!watchlistName) return;\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    const {\n      data,\n      error\n    } = await supabase.from('watchlists').insert([{\n      name: watchlistName,\n      user_id: user.id\n    }]);\n    if (error) {\n      console.error('Error creating watchlist:', error.message);\n    } else {\n      setWatchlists([...watchlists, ...data]); // Update local state with new watchlist\n      navigate(`/${username}/${watchlistName}`);\n      setWatchlistName(''); // Clear the field after creation\n    }\n  };\n  const deleteWatchlist = async deletedId => {\n    if (window.confirm(`Are you sure you want to delete this list?`)) {\n      const {\n        error\n      } = await supabase.from('watchlists').delete().match({\n        id: deletedId\n      });\n      if (error) {\n        console.error('Error deleting list:', error.message);\n      } else {\n        setWatchlists(currentWatchlists => currentWatchlists.filter(list => list.id !== deletedId));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 grid grid-cols-3 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold col-span-3\",\n      children: \"Your Watchlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-3 flex justify-end\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: watchlistName,\n        onChange: e => setWatchlistName(e.target.value),\n        placeholder: \"Enter Watchlist Name\",\n        className: \"border p-2 my-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => createWatchlist(),\n        className: \"ml-2 my-4 bg-blue-500 text-white p-2 rounded\",\n        children: \"Create Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), watchlists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 m-4 border-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-blue-500 hover:text-blue-600\",\n        onClick: () => navigate(`/list/${username}/${list.name}`),\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"block hover:underline\",\n        onClick: () => deleteWatchlist(list.id),\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)]\n    }, list.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(WatchlistPage, \"+c2l9H2l2DWH5sTl5Wbks585WWQ=\", false, function () {\n  return [useNavigate];\n});\n_c = WatchlistPage;\nexport default WatchlistPage;\nvar _c;\n$RefreshReg$(_c, \"WatchlistPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","supabase","jsxDEV","_jsxDEV","WatchlistPage","_s","watchlists","setWatchlists","watchlistName","setWatchlistName","username","setUsername","navigate","fetchUserData","data","user","auth","getUser","profile","error","from","select","eq","id","single","console","message","fetchWatchlists","userId","ownWatchlistsQuery","sharedWatchlistsQuery","ownWatchlists","ownError","sharedWatchlistsData","sharedError","sharedWatchlists","map","item","watchlist","combinedWatchlists","createWatchlist","insert","name","user_id","deleteWatchlist","deletedId","window","confirm","delete","match","currentWatchlists","filter","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/WatchlistPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../utils/supabaseClient';\n\n\nconst WatchlistPage = () => {\n    const [watchlists, setWatchlists] = useState([]);\n    const [watchlistName, setWatchlistName] = useState('');\n    const [username, setUsername] = useState('');\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const { data: { user } } = await supabase.auth.getUser();\n\n\n            if (!user) {\n                navigate('/login');\n                return;\n            }\n\n\n            const { data: profile, error } = await supabase\n                .from('profiles')\n                .select('username')\n                .eq('user_id', user.id)\n                .single();\n\n\n            if (error) {\n                console.error('Error fetching user data:', error.message);\n                navigate('/');\n            } else {\n                setUsername(profile.username);\n                fetchWatchlists(user.id);\n            }\n        };\n\n\n        fetchUserData();\n    }, [navigate]);\n\n\n    const fetchWatchlists = async (userId) => {\n        // Query to fetch watchlists that the user owns\n        const ownWatchlistsQuery = supabase\n            .from('watchlists')\n            .select('*')\n            .eq('user_id', userId);\n   \n        // Query to fetch watchlists that are shared with the user\n        const sharedWatchlistsQuery = supabase\n            .from('watchlist_shares')\n            .select(`\n                watchlist_id,\n                watchlist:watchlist_id (id, name, user_id)  // Assuming a foreign key from watchlist_shares to watchlists\n            `)\n            .eq('shared_with_user_id', userId);\n   \n        try {\n            let { data: ownWatchlists, error: ownError } = await ownWatchlistsQuery;\n            let { data: sharedWatchlistsData, error: sharedError } = await sharedWatchlistsQuery;\n   \n            if (ownError) {\n                console.error('Error fetching own watchlists:', ownError.message);\n                return;\n            }\n            if (sharedError) {\n                console.error('Error fetching shared watchlists:', sharedError.message);\n                return;\n            }\n   \n            // Map shared watchlists to have the same structure as own watchlists\n            const sharedWatchlists = sharedWatchlistsData.map(item => item.watchlist);\n   \n            // Combine own and shared watchlists\n            const combinedWatchlists = [...ownWatchlists, ...sharedWatchlists];\n            setWatchlists(combinedWatchlists);\n        } catch (error) {\n            console.error('Error fetching watchlists:', error.message);\n        }\n    };\n   \n\n\n    const createWatchlist = async () => {\n        if (!watchlistName) return;\n\n\n        const { data: { user } } = await supabase.auth.getUser();\n        const { data, error } = await supabase\n            .from('watchlists')\n            .insert([{ name: watchlistName, user_id: user.id }]);\n\n\n        if (error) {\n            console.error('Error creating watchlist:', error.message);\n        } else {\n            setWatchlists([...watchlists, ...data]); // Update local state with new watchlist\n            navigate(`/${username}/${watchlistName}`);\n            setWatchlistName(''); // Clear the field after creation\n        }\n    };\n\n\n    const deleteWatchlist = async (deletedId) => {\n        if (window.confirm(`Are you sure you want to delete this list?`)) {\n            const { error } = await supabase\n                .from('watchlists')\n                .delete()\n                .match({ id: deletedId });\n\n\n            if (error) {\n                console.error('Error deleting list:', error.message);\n            } else {\n                setWatchlists(currentWatchlists => currentWatchlists.filter(list => list.id !== deletedId));\n            }\n        }\n    };\n\n\n    return (\n        <div className=\"container mx-auto p-4 grid grid-cols-3 w-full\">\n            <h1 className=\"text-xl font-bold col-span-3\">Your Watchlists</h1>\n            <div className=\"col-span-3 flex justify-end\">\n                <input\n                    type=\"text\"\n                    value={watchlistName}\n                    onChange={(e) => setWatchlistName(e.target.value)}\n                    placeholder=\"Enter Watchlist Name\"\n                    className=\"border p-2 my-4\"\n                />\n                <button onClick={() => createWatchlist()} className=\"ml-2 my-4 bg-blue-500 text-white p-2 rounded\">\n                    Create Watchlist\n                </button>\n            </div>\n            {watchlists.map((list) => (\n                <div key={list.id} className=\"p-2 m-4 border-2\">\n                    <button className=\"text-blue-500 hover:text-blue-600\" onClick={() => navigate(`/list/${username}/${list.name}`)}>\n                        {list.name}\n                    </button>\n                    <button className=\"block hover:underline\" onClick={() => deleteWatchlist(list.id)}>remove</button>\n                </div>\n            ))}\n        </div>\n    );\n};\n\n\nexport default WatchlistPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}