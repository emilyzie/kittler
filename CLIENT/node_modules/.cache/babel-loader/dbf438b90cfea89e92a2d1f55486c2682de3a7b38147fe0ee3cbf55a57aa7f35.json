{"ast":null,"code":"// import { createClient } from '@supabase/supabase-js';\n\n// const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n// const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// export const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nimport { createClient } from '@supabase/supabase-js';\nimport React from 'react';\nfunction createClerkSupabaseClient() {\n  return createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_KEY, {\n    global: {\n      fetch: async (url, options = {}) => {\n        const clerkToken = await window.Clerk.session.getToken({\n          template: 'supabase'\n        });\n        const headers = new Headers(options.headers);\n        headers.set('Authorization', `Bearer ${clerkToken}`);\n        return fetch(url, {\n          ...options,\n          headers\n        });\n      }\n    }\n  });\n}\nconst supabase = createClerkSupabaseClient();\nexport default supabase;","map":{"version":3,"names":["createClient","React","createClerkSupabaseClient","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_KEY","global","fetch","url","options","clerkToken","window","Clerk","session","getToken","template","headers","Headers","set","supabase"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/supabaseClient.js"],"sourcesContent":["// import { createClient } from '@supabase/supabase-js';\n\n// const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n// const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// export const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n\nimport { createClient } from '@supabase/supabase-js';\nimport React from 'react';\n\nfunction createClerkSupabaseClient() {\n  return createClient(\n    process.env.REACT_APP_SUPABASE_URL,\n    process.env.REACT_APP_SUPABASE_KEY,\n    {\n      global: {\n        fetch: async (url, options = {}) => {\n          const clerkToken = await window.Clerk.session.getToken({ template: 'supabase' });\n          const headers = new Headers(options.headers);\n          headers.set('Authorization', `Bearer ${clerkToken}`);\n          return fetch(url, { ...options, headers });\n        }\n      }\n    }\n  );\n}\n\nconst supabase = createClerkSupabaseClient();\nexport default supabase;\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;;AAGA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,yBAAyBA,CAAA,EAAG;EACnC,OAAOF,YAAY,CACjBG,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAClCF,OAAO,CAACC,GAAG,CAACE,sBAAsB,EAClC;IACEC,MAAM,EAAE;MACNC,KAAK,EAAE,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;QAClC,MAAMC,UAAU,GAAG,MAAMC,MAAM,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC;UAAEC,QAAQ,EAAE;QAAW,CAAC,CAAC;QAChF,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAACR,OAAO,CAACO,OAAO,CAAC;QAC5CA,OAAO,CAACE,GAAG,CAAC,eAAe,EAAG,UAASR,UAAW,EAAC,CAAC;QACpD,OAAOH,KAAK,CAACC,GAAG,EAAE;UAAE,GAAGC,OAAO;UAAEO;QAAQ,CAAC,CAAC;MAC5C;IACF;EACF,CACF,CAAC;AACH;AAEA,MAAMG,QAAQ,GAAGlB,yBAAyB,CAAC,CAAC;AAC5C,eAAekB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}