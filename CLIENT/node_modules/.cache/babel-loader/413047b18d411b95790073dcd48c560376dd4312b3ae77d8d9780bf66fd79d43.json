{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/tth/fintech-frontend/src/pages/SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Initialize Supabase client (assuming you've done this globally, just reference it here)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://klligruouvwvqrwrxqcj.supabase.co'; // Replace with your Supabase project URL\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtsbGlncnVvdXZ3dnFyd3J4cWNqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc1MDg5NTQsImV4cCI6MjAyMzA4NDk1NH0.9DI6I1eD9mr6wzlvePSMTdr6DQctU4Mh9vGv8XD8WJ4'; // Replace with your Supabase anon key\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\nconst SignupPage = () => {\n  _s();\n  // Define state variables for the signup form fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // State to handle any signup or Google Sign-On error\n\n  // Handle traditional form submission for email/password signup\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      user,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      console.log('User created:', user);\n      // Redirect or perform further actions\n    }\n  };\n\n  // Handle Google Sign-On\n  const handleGoogleSignIn = async () => {\n    const {\n      user,\n      error\n    } = await supabase.auth.signIn({\n      provider: 'google'\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      console.log('Google sign in successful:', user);\n      // Redirect or perform further actions\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      children: \"Sign Up with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupPage, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","supabase","SignupPage","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","user","auth","signUp","message","console","log","handleGoogleSignIn","signIn","provider","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/tth/fintech-frontend/src/pages/SignupPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Initialize Supabase client (assuming you've done this globally, just reference it here)\nconst supabaseUrl = 'https://klligruouvwvqrwrxqcj.supabase.co'; // Replace with your Supabase project URL\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtsbGlncnVvdXZ3dnFyd3J4cWNqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDc1MDg5NTQsImV4cCI6MjAyMzA4NDk1NH0.9DI6I1eD9mr6wzlvePSMTdr6DQctU4Mh9vGv8XD8WJ4'; // Replace with your Supabase anon key\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst SignupPage = () => {\n    // Define state variables for the signup form fields\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(''); // State to handle any signup or Google Sign-On error\n\n    // Handle traditional form submission for email/password signup\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { user, error } = await supabase.auth.signUp({\n            email,\n            password,\n        });\n\n        if (error) {\n            setError(error.message);\n        } else {\n            console.log('User created:', user);\n            // Redirect or perform further actions\n        }\n    };\n\n    // Handle Google Sign-On\n    const handleGoogleSignIn = async () => {\n        const { user, error } = await supabase.auth.signIn({\n            provider: 'google',\n        });\n\n        if (error) {\n            setError(error.message);\n        } else {\n            console.log('Google sign in successful:', user);\n            // Redirect or perform further actions\n        }\n    };\n\n    return (\n        <div>\n            <h1>Signup Page</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display any signup or Google Sign-On error */}\n            <form onSubmit={handleSubmit}>\n                <label>Email:</label>\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n                <label>Password:</label>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n\n                <button type=\"submit\">Sign Up</button>\n            </form>\n            <button onClick={handleGoogleSignIn}>Sign Up with Google</button>\n        </div>\n    );\n};\n\nexport default SignupPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,0CAA0C,CAAC,CAAC;AAChE,MAAMC,eAAe,GAAG,kNAAkN,CAAC,CAAC;AAC5O,MAAMC,QAAQ,GAAGL,YAAY,CAACG,WAAW,EAAEC,eAAe,CAAC;AAE3D,MAAME,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEC,IAAI;MAAEL;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACa,IAAI,CAACC,MAAM,CAAC;MAC/CX,KAAK;MACLE;IACJ,CAAC,CAAC;IAEF,IAAIE,KAAK,EAAE;MACPC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;IAC3B,CAAC,MAAM;MACHC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,IAAI,CAAC;MAClC;IACJ;EACJ,CAAC;;EAED;EACA,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAM;MAAEN,IAAI;MAAEL;IAAM,CAAC,GAAG,MAAMP,QAAQ,CAACa,IAAI,CAACM,MAAM,CAAC;MAC/CC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEF,IAAIb,KAAK,EAAE;MACPC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;IAC3B,CAAC,MAAM;MACHC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,IAAI,CAAC;MAC/C;IACJ;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBlB,KAAK,iBAAIV,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACnD5B,OAAA;MAAM+B,QAAQ,EAAEnB,YAAa;MAAAY,QAAA,gBACzBxB,OAAA;QAAAwB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB5B,OAAA;QAAOgC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE3B,KAAM;QAAC4B,QAAQ,EAAGrB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/E5B,OAAA;QAAAwB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB5B,OAAA;QAAOgC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEzB,QAAS;QAAC0B,QAAQ,EAAGrB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExF5B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACP5B,OAAA;MAAQoC,OAAO,EAAEf,kBAAmB;MAAAG,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAACvB,EAAA,CApDID,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAsDhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}