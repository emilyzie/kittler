{"ast":null,"code":"import { createClient } from \"@supabase/supabase-js\";\nimport React from \"react\";\nfunction createClerkSupabaseClient() {\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Supabase URL or Anon Key is missing!\");\n    return null;\n  }\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    fetch: async (url, options = {}) => {\n      var _window$Clerk, _window$Clerk$session;\n      const clerkToken = (_window$Clerk = window.Clerk) === null || _window$Clerk === void 0 ? void 0 : (_window$Clerk$session = _window$Clerk.session) === null || _window$Clerk$session === void 0 ? void 0 : _window$Clerk$session.getToken({\n        template: \"supabase\"\n      }).then(token => token).catch(err => {\n        console.error(\"Error fetching Clerk token:\", err);\n        return null;\n      });\n      if (!clerkToken) {\n        console.error(\"Clerk token is not available.\");\n        return fetch(url, options); // Proceed without Authorization header if token is not available\n      }\n      const headers = new Headers(options.headers);\n      headers.set(\"Authorization\", `Bearer ${await clerkToken}`);\n      return fetch(url, {\n        ...options,\n        headers\n      });\n    }\n  });\n}\nconst client = createClerkSupabaseClient();\nexport default client;","map":{"version":3,"names":["createClient","React","createClerkSupabaseClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","console","error","fetch","url","options","_window$Clerk","_window$Clerk$session","clerkToken","window","Clerk","session","getToken","template","then","token","catch","err","headers","Headers","set","client"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/supabaseClient.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\nimport React from \"react\";\n\nfunction createClerkSupabaseClient() {\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Supabase URL or Anon Key is missing!\");\n    return null;\n  }\n\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    fetch: async (url, options = {}) => {\n      const clerkToken = window.Clerk?.session?.getToken({\n        template: \"supabase\",\n      }).then(token => token).catch(err => {\n        console.error(\"Error fetching Clerk token:\", err);\n        return null;\n      });\n\n      if (!clerkToken) {\n        console.error(\"Clerk token is not available.\");\n        return fetch(url, options); // Proceed without Authorization header if token is not available\n      }\n\n      const headers = new Headers(options.headers);\n      headers.set(\"Authorization\", `Bearer ${await clerkToken}`);\n      return fetch(url, { ...options, headers });\n    },\n  });\n}\n\nconst client = createClerkSupabaseClient();\n\nexport default client;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,yBAAyBA,CAAA,EAAG;EACnC,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;EAE/D,IAAI,CAACL,WAAW,IAAI,CAACI,eAAe,EAAE;IACpCE,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;IACrD,OAAO,IAAI;EACb;EAEA,OAAOV,YAAY,CAACG,WAAW,EAAEI,eAAe,EAAE;IAChDI,KAAK,EAAE,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;MAAA,IAAAC,aAAA,EAAAC,qBAAA;MAClC,MAAMC,UAAU,IAAAF,aAAA,GAAGG,MAAM,CAACC,KAAK,cAAAJ,aAAA,wBAAAC,qBAAA,GAAZD,aAAA,CAAcK,OAAO,cAAAJ,qBAAA,uBAArBA,qBAAA,CAAuBK,QAAQ,CAAC;QACjDC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,IAAIA,KAAK,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;QACnChB,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEe,GAAG,CAAC;QACjD,OAAO,IAAI;MACb,CAAC,CAAC;MAEF,IAAI,CAACT,UAAU,EAAE;QACfP,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;QAC9C,OAAOC,KAAK,CAACC,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;MAC9B;MAEA,MAAMa,OAAO,GAAG,IAAIC,OAAO,CAACd,OAAO,CAACa,OAAO,CAAC;MAC5CA,OAAO,CAACE,GAAG,CAAC,eAAe,EAAG,UAAS,MAAMZ,UAAW,EAAC,CAAC;MAC1D,OAAOL,KAAK,CAACC,GAAG,EAAE;QAAE,GAAGC,OAAO;QAAEa;MAAQ,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ;AAEA,MAAMG,MAAM,GAAG3B,yBAAyB,CAAC,CAAC;AAE1C,eAAe2B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}