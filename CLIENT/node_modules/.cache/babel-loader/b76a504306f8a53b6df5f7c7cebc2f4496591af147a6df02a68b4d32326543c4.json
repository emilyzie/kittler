{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useClerk } from '@clerk/clerk-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  var _userDetails$emailAdd;\n  const navigate = useNavigate();\n  const clerk = useClerk(); // Using Clerk's hook to access user operations\n  const [userDetails, setUserDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchUserProfile() {\n      const userId = 'user_2hGNMTlEgvYdwtuz6bupG76K4ZX'; // Your user's ID\n\n      try {\n        const user = clerk.user;\n        setUserDetails(response);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch user details:\", error);\n        navigate('/'); // Redirect or handle errors as necessary\n      }\n    }\n    fetchUserProfile();\n  }, [users, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen flex flex-col items-center pt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl mb-16 text-center\",\n      children: [\"Profile: \", userDetails === null || userDetails === void 0 ? void 0 : userDetails.firstName, \" \", userDetails === null || userDetails === void 0 ? void 0 : userDetails.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \" \", userDetails === null || userDetails === void 0 ? void 0 : (_userDetails$emailAdd = userDetails.emailAddresses[0]) === null || _userDetails$emailAdd === void 0 ? void 0 : _userDetails$emailAdd.emailAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Account Created:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \", new Date(userDetails === null || userDetails === void 0 ? void 0 : userDetails.createdAt).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"uaDQBHEdImUtaVGGQj5kKd2oeMc=\", false, function () {\n  return [useNavigate, useClerk];\n});\n_c = ProfilePage;\nexport default ProfilePage;\n\n// // ProfilePage.js\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useSupabaseClient } from '../utils/auth'; // Import the hook\n// import WatchlistPage from './WatchlistPage';\n// import FriendsBar from '../components/common/FriendsBar';\n// import FriendRequestsDropdown from '../components/common/FriendRequests';\n\n// const ProfilePage = () => {\n//   const navigate = useNavigate();\n//   const supabase = useSupabaseClient(); // Use the hook\n//   const [username, setUsername] = useState('Guest');\n//   const [loading, setLoading] = useState(true);\n//   const [userId, setUserId] = useState(null);\n//   const [toggle, setToggle] = useState(1);\n//   const [friends, setFriends] = useState([]);\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       const { data: { user }, error: userError } = await supabase.auth.getUser();\n\n//       if (userError || !user) {\n//         console.log(\"Cooked.\");\n//         navigate('/');\n//         return;\n//       }\n\n//       setUserId(user.id);\n\n//       const { data: profile, error: profileError } = await supabase\n//         .from('profiles')\n//         .select('username')\n//         .eq('user_id', user.id)\n//         .single();\n\n//       if (profileError) {\n//         console.error('Error fetching user data:', profileError.message);\n//         navigate('/');\n//       } else if (profile) {\n//         setUsername(profile.username);\n//       }\n\n//       setLoading(false);\n//     };\n\n//     const fetchFriends = async () => {\n//       if (!userId) return; // Only fetch if userId is available\n//       const { data, error } = await supabase\n//         .from('friends')\n//         .select(`\n//           friend_id,\n//           friend_profile:friend_id (username) // Adjusted for correct relationship fetching\n//         `)\n//         .eq('user_id', userId)\n//         .eq('status', 'accepted');\n\n//       if (error) {\n//         console.error('Error fetching friends:', error.message);\n//       } else {\n//         console.log('Fetched friends data:', data); // Logs successful data fetch.\n\n//         setFriends(data.map(friend => ({\n//           id: friend.friend_id,\n//           username: friend.friend_profile.username  // Assuming the returned data structure from the query\n//         })));\n//       }\n//     };\n\n//     fetchUserData();\n\n//     if (userId) fetchFriends(); // Fetch friends if userId is available\n//   }, [navigate, supabase, userId]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const updateToggle = (id) => {\n//     setToggle(id);\n//   };\n\n//   const deleteFriend = async (deletedId) => {\n//     if (window.confirm(`Are you sure you want to delete this friend?`)) {\n//       const { error } = await supabase\n//         .from('friends')\n//         .delete()\n//         .or(`and(user_id.eq.${userId},friend_id.eq.${deletedId}),and(user_id.eq.${deletedId},friend_id.eq.${userId})`);\n\n//       if (error) {\n//         console.error('Error deleting friend:', error.message);\n//       } else {\n//         setFriends(currentFriends => currentFriends.filter(friend => friend.id !== deletedId));\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-screen h-screen flex flex-col items-center pt-10\">\n//       <div className=\"flex justify-end w-5/6\">\n//         <div className=\"tab-bar grid grid-col-1\">\n//           <span className=\"py-1 cursor-pointer text-right border-b border-black\" onClick={() => updateToggle(1)}>Profile</span>\n//           <span className=\"py-1 cursor-pointer text-right border-b border-black\" onClick={() => updateToggle(2)}>Lists</span>\n//           <span className=\"pl-4 py-1 cursor-pointer text-right border-b border-black\" onClick={() => updateToggle(3)}>Friends</span>\n//         </div>\n//       </div>\n//       <div className={toggle === 1 ? \"w-5/6\" : \"hidden\"}>\n//         <h1 className=\"text-2xl mb-16 text-left\">profpic {username}</h1>\n//         <div className=\"mt-16 grid grid-cols-4\">\n//           <div className=\"border-2 m-4 rounded-full py-8 px-4 grid grid-cols-1\">\n//             <span>lists: </span>\n//             <span>{friends.length}</span>\n//           </div>\n//           <span className=\"border-2 m-4 rounded-full py-8 px-4\">to consume: </span>\n//           <span className=\"border-2 m-4 rounded-full py-8 px-4\">consuming: </span>\n//           <span className=\"border-2 m-4 rounded-full py-8 px-4\">consumed: </span>\n//         </div>\n//       </div>\n//       <div className={toggle === 2 ? \"w-screen\" : \"hidden\"}>\n//         <WatchlistPage />\n//       </div>\n//       <div className={toggle === 3 ? \"grid grid-cols-2\" : \"hidden\"}>\n//         <div className=\"h-screen border-r-2 flex flex-col items-center\">\n//           <div className=\"m-6\">requests</div>\n//           <div className=\"m-6\"><FriendsBar userId={userId} /></div>\n//           <FriendRequestsDropdown userId={userId} />\n//         </div>\n//         <div className=\"flex flex-col items-center\">\n//           <h2 className=\"p-2 my-4\">friends</h2>\n//           {friends.map(friend => (\n//             <div className=\"border-b flex justify-between w-3/4\" key={friend.id}>\n//               {friend.username}\n//               <button className=\"hover:underline\" onClick={() => deleteFriend(friend.id)}>remove</button>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useClerk","jsxDEV","_jsxDEV","ProfilePage","_s","_userDetails$emailAdd","navigate","clerk","userDetails","setUserDetails","loading","setLoading","fetchUserProfile","userId","user","response","error","console","users","children","fileName","_jsxFileName","lineNumber","columnNumber","className","firstName","lastName","emailAddresses","emailAddress","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useClerk } from '@clerk/clerk-react';\n\nconst ProfilePage = () => {\n  const navigate = useNavigate();\n  const clerk = useClerk();  // Using Clerk's hook to access user operations\n  const [userDetails, setUserDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchUserProfile() {\n      const userId = 'user_2hGNMTlEgvYdwtuz6bupG76K4ZX'; // Your user's ID\n\n      try {\n        const user = clerk.user;\n        setUserDetails(response);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch user details:\", error);\n        navigate('/');  // Redirect or handle errors as necessary\n      }\n    }\n\n    fetchUserProfile();\n  }, [users, navigate]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"w-screen h-screen flex flex-col items-center pt-10\">\n      <h1 className=\"text-2xl mb-16 text-center\">Profile: {userDetails?.firstName} {userDetails?.lastName}</h1>\n      <div>\n        <strong>Email:</strong> {userDetails?.emailAddresses[0]?.emailAddress}\n        <br/>\n        <strong>Account Created:</strong> {new Date(userDetails?.createdAt).toLocaleString()}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n\n\n\n\n// // ProfilePage.js\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useSupabaseClient } from '../utils/auth'; // Import the hook\n// import WatchlistPage from './WatchlistPage';\n// import FriendsBar from '../components/common/FriendsBar';\n// import FriendRequestsDropdown from '../components/common/FriendRequests';\n\n// const ProfilePage = () => {\n//   const navigate = useNavigate();\n//   const supabase = useSupabaseClient(); // Use the hook\n//   const [username, setUsername] = useState('Guest');\n//   const [loading, setLoading] = useState(true);\n//   const [userId, setUserId] = useState(null);\n//   const [toggle, setToggle] = useState(1);\n//   const [friends, setFriends] = useState([]);\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       const { data: { user }, error: userError } = await supabase.auth.getUser();\n\n//       if (userError || !user) {\n//         console.log(\"Cooked.\");\n//         navigate('/');\n//         return;\n//       }\n\n//       setUserId(user.id);\n\n//       const { data: profile, error: profileError } = await supabase\n//         .from('profiles')\n//         .select('username')\n//         .eq('user_id', user.id)\n//         .single();\n\n//       if (profileError) {\n//         console.error('Error fetching user data:', profileError.message);\n//         navigate('/');\n//       } else if (profile) {\n//         setUsername(profile.username);\n//       }\n\n//       setLoading(false);\n//     };\n\n//     const fetchFriends = async () => {\n//       if (!userId) return; // Only fetch if userId is available\n//       const { data, error } = await supabase\n//         .from('friends')\n//         .select(`\n//           friend_id,\n//           friend_profile:friend_id (username) // Adjusted for correct relationship fetching\n//         `)\n//         .eq('user_id', userId)\n//         .eq('status', 'accepted');\n\n//       if (error) {\n//         console.error('Error fetching friends:', error.message);\n//       } else {\n//         console.log('Fetched friends data:', data); // Logs successful data fetch.\n\n//         setFriends(data.map(friend => ({\n//           id: friend.friend_id,\n//           username: friend.friend_profile.username  // Assuming the returned data structure from the query\n//         })));\n//       }\n//     };\n\n//     fetchUserData();\n\n//     if (userId) fetchFriends(); // Fetch friends if userId is available\n//   }, [navigate, supabase, userId]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const updateToggle = (id) => {\n//     setToggle(id);\n//   };\n\n//   const deleteFriend = async (deletedId) => {\n//     if (window.confirm(`Are you sure you want to delete this friend?`)) {\n//       const { error } = await supabase\n//         .from('friends')\n//         .delete()\n//         .or(`and(user_id.eq.${userId},friend_id.eq.${deletedId}),and(user_id.eq.${deletedId},friend_id.eq.${userId})`);\n\n//       if (error) {\n//         console.error('Error deleting friend:', error.message);\n//       } else {\n//         setFriends(currentFriends => currentFriends.filter(friend => friend.id !== deletedId));\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"w-screen h-screen flex flex-col items-center pt-10\">\n//       <div className=\"flex justify-end w-5/6\">\n//         <div className=\"tab-bar grid grid-col-1\">\n//           <span className=\"py-1 cursor-pointer text-right border-b border-black\" onClick={() => updateToggle(1)}>Profile</span>\n//           <span className=\"py-1 cursor-pointer text-right border-b border-black\" onClick={() => updateToggle(2)}>Lists</span>\n//           <span className=\"pl-4 py-1 cursor-pointer text-right border-b border-black\" onClick={() => updateToggle(3)}>Friends</span>\n//         </div>\n//       </div>\n//       <div className={toggle === 1 ? \"w-5/6\" : \"hidden\"}>\n//         <h1 className=\"text-2xl mb-16 text-left\">profpic {username}</h1>\n//         <div className=\"mt-16 grid grid-cols-4\">\n//           <div className=\"border-2 m-4 rounded-full py-8 px-4 grid grid-cols-1\">\n//             <span>lists: </span>\n//             <span>{friends.length}</span>\n//           </div>\n//           <span className=\"border-2 m-4 rounded-full py-8 px-4\">to consume: </span>\n//           <span className=\"border-2 m-4 rounded-full py-8 px-4\">consuming: </span>\n//           <span className=\"border-2 m-4 rounded-full py-8 px-4\">consumed: </span>\n//         </div>\n//       </div>\n//       <div className={toggle === 2 ? \"w-screen\" : \"hidden\"}>\n//         <WatchlistPage />\n//       </div>\n//       <div className={toggle === 3 ? \"grid grid-cols-2\" : \"hidden\"}>\n//         <div className=\"h-screen border-r-2 flex flex-col items-center\">\n//           <div className=\"m-6\">requests</div>\n//           <div className=\"m-6\"><FriendsBar userId={userId} /></div>\n//           <FriendRequestsDropdown userId={userId} />\n//         </div>\n//         <div className=\"flex flex-col items-center\">\n//           <h2 className=\"p-2 my-4\">friends</h2>\n//           {friends.map(friend => (\n//             <div className=\"border-b flex justify-between w-3/4\" key={friend.id}>\n//               {friend.username}\n//               <button className=\"hover:underline\" onClick={() => deleteFriend(friend.id)}>remove</button>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}