{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/utils/auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// utils/auth.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSession } from '@clerk/clerk-react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst SupabaseContext = /*#__PURE__*/createContext(null);\nexport const SupabaseProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    session\n  } = useSession();\n  const [supabase, setSupabase] = useState(null);\n  useEffect(() => {\n    console.log(\"Session status:\", session); // Debugging line\n    if (session) {\n      const supabaseClient = createClient(supabaseUrl, supabaseAnonKey, {\n        global: {\n          fetch: async (url, options = {}) => {\n            const clerkToken = await session.getToken({\n              template: 'supabase'\n            });\n            const headers = new Headers(options.headers);\n            headers.set('Authorization', `Bearer ${clerkToken}`);\n            return fetch(url, {\n              ...options,\n              headers\n            });\n          }\n        }\n      });\n      setSupabase(supabaseClient);\n    } else {\n      console.log(\"Session is not active, unable to create Supabase client\");\n      setSupabase(null);\n    }\n  }, [session]);\n  return /*#__PURE__*/_jsxDEV(SupabaseContext.Provider, {\n    value: supabase,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(SupabaseProvider, \"oQx2V63fNBZeMlVanh17w/Lj6y4=\", false, function () {\n  return [useSession];\n});\n_c = SupabaseProvider;\nexport const useSupabaseClient = () => {\n  _s2();\n  const context = useContext(SupabaseContext);\n  if (context === null) {\n    throw new Error(\"useSupabaseClient must be used within a SupabaseProvider.\");\n  }\n  return context;\n};\n_s2(useSupabaseClient, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SupabaseProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useSession","createClient","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","SupabaseContext","SupabaseProvider","children","_s","session","supabase","setSupabase","console","log","supabaseClient","global","fetch","url","options","clerkToken","getToken","template","headers","Headers","set","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSupabaseClient","_s2","context","Error","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/utils/auth.js"],"sourcesContent":["// utils/auth.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSession } from '@clerk/clerk-react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nconst SupabaseContext = createContext(null);\n\nexport const SupabaseProvider = ({ children }) => {\n    const { session } = useSession();\n    const [supabase, setSupabase] = useState(null);\n  \n    useEffect(() => {\n      console.log(\"Session status:\", session); // Debugging line\n      if (session) {\n        const supabaseClient = createClient(\n          supabaseUrl,\n          supabaseAnonKey,\n          {\n            global: {\n              fetch: async (url, options = {}) => {\n                const clerkToken = await session.getToken({ template: 'supabase' });\n                const headers = new Headers(options.headers);\n                headers.set('Authorization', `Bearer ${clerkToken}`);\n                return fetch(url, { ...options, headers });\n              }\n            }\n          }\n        );\n        setSupabase(supabaseClient);\n      } else {\n        console.log(\"Session is not active, unable to create Supabase client\");\n        setSupabase(null);\n      }\n    }, [session]);\n  \n    return (\n      <SupabaseContext.Provider value={supabase}>\n        {children}\n      </SupabaseContext.Provider>\n    );\n  };  \n\nexport const useSupabaseClient = () => {\n  const context = useContext(SupabaseContext);\n  if (context === null) {\n    throw new Error(\"useSupabaseClient must be used within a SupabaseProvider.\");\n  }\n  return context;\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAE/D,MAAMC,eAAe,gBAAGd,aAAa,CAAC,IAAI,CAAC;AAE3C,OAAO,MAAMe,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC;EAAQ,CAAC,GAAGd,UAAU,CAAC,CAAC;EAChC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,OAAO,CAAC,CAAC,CAAC;IACzC,IAAIA,OAAO,EAAE;MACX,MAAMK,cAAc,GAAGlB,YAAY,CACjCG,WAAW,EACXI,eAAe,EACf;QACEY,MAAM,EAAE;UACNC,KAAK,EAAE,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;YAClC,MAAMC,UAAU,GAAG,MAAMV,OAAO,CAACW,QAAQ,CAAC;cAAEC,QAAQ,EAAE;YAAW,CAAC,CAAC;YACnE,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAACL,OAAO,CAACI,OAAO,CAAC;YAC5CA,OAAO,CAACE,GAAG,CAAC,eAAe,EAAG,UAASL,UAAW,EAAC,CAAC;YACpD,OAAOH,KAAK,CAACC,GAAG,EAAE;cAAE,GAAGC,OAAO;cAAEI;YAAQ,CAAC,CAAC;UAC5C;QACF;MACF,CACF,CAAC;MACDX,WAAW,CAACG,cAAc,CAAC;IAC7B,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACtEF,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACEX,OAAA,CAACO,eAAe,CAACoB,QAAQ;IAACC,KAAK,EAAEhB,QAAS;IAAAH,QAAA,EACvCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACtB,EAAA,CAjCSF,gBAAgB;EAAA,QACLX,UAAU;AAAA;AAAAoC,EAAA,GADrBzB,gBAAgB;AAmC7B,OAAO,MAAM0B,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACrC,MAAMC,OAAO,GAAG1C,UAAU,CAACa,eAAe,CAAC;EAC3C,IAAI6B,OAAO,KAAK,IAAI,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,iBAAiB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}