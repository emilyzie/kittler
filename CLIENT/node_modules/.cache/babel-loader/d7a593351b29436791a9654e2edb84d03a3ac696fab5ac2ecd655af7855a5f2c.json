{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/common/Header';\nimport MovieCard from '../components/common/MovieCard'; // Ensure this is created\nimport SearchBar from '../components/common/SearchBar'; // Ensure this component is suitable for movies\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  // State to hold the list of movies\n  const [movies, setMovies] = useState([\n  // Placeholder movies\n  {\n    id: 1,\n    name: 'Inception',\n    genre: 'Sci-Fi/Thriller',\n    rating: '8.8',\n    watched: false,\n    visible: true,\n    link: '' // If a YouTube link is provided, it could be stored here\n  }\n  // ...more movies\n  ]);\n\n  // Function to handle the visibility toggle\n  const toggleVisibility = id => {\n    setMovies(movies.map(movie => {\n      if (movie.id === id) {\n        return {\n          ...movie,\n          visible: !movie.visible\n        };\n      }\n      return movie;\n    }));\n  };\n\n  // Function to mark a movie as watched\n  const markAsWatched = id => {\n    setMovies(movies.map(movie => {\n      if (movie.id === id) {\n        return {\n          ...movie,\n          watched: !movie.watched\n        };\n      }\n      return movie;\n    }));\n  };\n\n  // Function to add a movie to the list\n  const addMovie = movie => {\n    setMovies([...movies, {\n      ...movie,\n      id: movies.length + 1\n    }]);\n  };\n\n  // Boilerplate SearchBar handler\n  const handleSearch = query => {\n    // TODO: Implement search functionality\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch,\n      placeholder: \"Search for movies or paste YouTube link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 p-4\",\n      children: movies.map(movie => movie.visible && /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        toggleVisibility: () => toggleVisibility(movie.id),\n        markAsWatched: () => markAsWatched(movie.id)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"YvSy4YuCVXfoKPJELEDCcC19NAI=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Header","MovieCard","SearchBar","jsxDEV","_jsxDEV","HomePage","_s","movies","setMovies","id","name","genre","rating","watched","visible","link","toggleVisibility","map","movie","markAsWatched","addMovie","length","handleSearch","query","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","placeholder","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/Header.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/common/Header';\nimport MovieCard from '../components/common/MovieCard'; // Ensure this is created\nimport SearchBar from '../components/common/SearchBar'; // Ensure this component is suitable for movies\n\nfunction HomePage() {\n  // State to hold the list of movies\n  const [movies, setMovies] = useState([\n    // Placeholder movies\n    {\n      id: 1,\n      name: 'Inception',\n      genre: 'Sci-Fi/Thriller',\n      rating: '8.8',\n      watched: false,\n      visible: true,\n      link: '', // If a YouTube link is provided, it could be stored here\n    },\n    // ...more movies\n  ]);\n\n  // Function to handle the visibility toggle\n  const toggleVisibility = (id) => {\n    setMovies(movies.map(movie => {\n      if (movie.id === id) {\n        return { ...movie, visible: !movie.visible };\n      }\n      return movie;\n    }));\n  };\n\n  // Function to mark a movie as watched\n  const markAsWatched = (id) => {\n    setMovies(movies.map(movie => {\n      if (movie.id === id) {\n        return { ...movie, watched: !movie.watched };\n      }\n      return movie;\n    }));\n  };\n\n  // Function to add a movie to the list\n  const addMovie = (movie) => {\n    setMovies([...movies, { ...movie, id: movies.length + 1 }]);\n  };\n\n  // Boilerplate SearchBar handler\n  const handleSearch = (query) => {\n    // TODO: Implement search functionality\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Header />\n      <SearchBar onSearch={handleSearch} placeholder=\"Search for movies or paste YouTube link\" />\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 p-4\">\n        {movies.map((movie) => (\n          movie.visible && <MovieCard key={movie.id} movie={movie} toggleVisibility={() => toggleVisibility(movie.id)} markAsWatched={() => markAsWatched(movie.id)} />\n        ))}\n      </div>\n      {/* More UI components and functionality to be added */}\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}