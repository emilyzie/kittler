{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/ForgotPasswordPage.js\",\n  _s = $RefreshSig$();\n// ForgotPasswordPage.js\nimport React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email);\n    if (error) {\n      setError(error.message);\n    } else {\n      setMessage('Check your email for the password reset link.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-center\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\",\n            className: \"w-full p-2 border border-gray-300 rounded\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-stone-400 hover:bg-stone-500 text-black py-2 px-4 rounded transition-colors duration-300\",\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPasswordPage, \"+oC6IIAeBPUO7WCSW4CSxdFqDlU=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","message","setMessage","error","setError","handleSubmit","e","preventDefault","auth","resetPasswordForEmail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/ForgotPasswordPage.js"],"sourcesContent":["// ForgotPasswordPage.js\nimport React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\n\nconst ForgotPasswordPage = () => {\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { error } = await supabase.auth.resetPasswordForEmail(email);\n\n        if (error) {\n            setError(error.message);\n        } else {\n            setMessage('Check your email for the password reset link.');\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n            <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg\">\n                <h1 className=\"text-2xl font-bold text-center\">Forgot Password</h1>\n                {error && <p className=\"text-red-500 text-center\">{error}</p>}\n                {message && <p className=\"text-green-500 text-center\">{message}</p>}\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                    <div>\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email\"\n                            className=\"w-full p-2 border border-gray-300 rounded\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"w-full bg-stone-400 hover:bg-stone-500 text-black py-2 px-4 rounded transition-colors duration-300\">\n                        Send Reset Link\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ForgotPasswordPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEJ;IAAM,CAAC,GAAG,MAAMT,QAAQ,CAACc,IAAI,CAACC,qBAAqB,CAACV,KAAK,CAAC;IAElE,IAAII,KAAK,EAAE;MACPC,QAAQ,CAACD,KAAK,CAACF,OAAO,CAAC;IAC3B,CAAC,MAAM;MACHC,UAAU,CAAC,+CAA+C,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKc,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACtEf,OAAA;MAAKc,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBACxEf,OAAA;QAAIc,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClEZ,KAAK,iBAAIP,OAAA;QAAGc,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAER;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5Dd,OAAO,iBAAIL,OAAA;QAAGc,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAEV;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEnB,OAAA;QAAMoB,QAAQ,EAAEX,YAAa;QAACK,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC/Cf,OAAA;UAAAe,QAAA,eACIf,OAAA;YACIqB,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEnB,KAAM;YACboB,QAAQ,EAAGb,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;YAC1CG,WAAW,EAAC,OAAO;YACnBX,SAAS,EAAC,2CAA2C;YACrDY,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNnB,OAAA;UAAQqB,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,oGAAoG;UAAAC,QAAA,EAAC;QAErI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjB,EAAA,CAxCID,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AA0CxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}