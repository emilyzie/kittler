{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/SignupPage.js\";\nimport React from 'react';\nimport { SignUp } from '@clerk/clerk-react';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSignUp = () => {\n  const handleSignUp = async user => {\n    const {\n      id,\n      emailAddresses\n    } = user;\n    const email = emailAddresses[0].emailAddress;\n\n    // Save additional user information to Supabase\n    const {\n      error: insertError\n    } = await supabase.from('profiles').insert([{\n      user_id: id,\n      email: email\n    }]);\n    if (insertError) {\n      console.error(\"Database insertion error:\", insertError.message);\n    } else {\n      console.log('Signup and profile creation successful:', user);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(SignUp, {\n      afterSignUp: handleSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomSignUp;\nexport default CustomSignUp;\nvar _c;\n$RefreshReg$(_c, \"CustomSignUp\");","map":{"version":3,"names":["React","SignUp","supabase","jsxDEV","_jsxDEV","CustomSignUp","handleSignUp","user","id","emailAddresses","email","emailAddress","error","insertError","from","insert","user_id","console","message","log","className","children","afterSignUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/SignupPage.js"],"sourcesContent":["import React from 'react';\nimport { SignUp } from '@clerk/clerk-react';\nimport supabase from '../supabaseClient';\n\nconst CustomSignUp = () => {\n\n  const handleSignUp = async (user) => {\n    const { id, emailAddresses } = user;\n    const email = emailAddresses[0].emailAddress;\n\n    // Save additional user information to Supabase\n    const { error: insertError } = await supabase\n      .from('profiles')\n      .insert([\n        { user_id: id, email: email }\n      ]);\n\n    if (insertError) {\n      console.error(\"Database insertion error:\", insertError.message);\n    } else {\n      console.log('Signup and profile creation successful:', user);\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg\">\n      <SignUp afterSignUp={handleSignUp} />\n    </div>\n  );\n};\n\nexport default CustomSignUp;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAEzB,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,MAAM;MAAEC,EAAE;MAAEC;IAAe,CAAC,GAAGF,IAAI;IACnC,MAAMG,KAAK,GAAGD,cAAc,CAAC,CAAC,CAAC,CAACE,YAAY;;IAE5C;IACA,MAAM;MAAEC,KAAK,EAAEC;IAAY,CAAC,GAAG,MAAMX,QAAQ,CAC1CY,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,CACN;MAAEC,OAAO,EAAER,EAAE;MAAEE,KAAK,EAAEA;IAAM,CAAC,CAC9B,CAAC;IAEJ,IAAIG,WAAW,EAAE;MACfI,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEC,WAAW,CAACK,OAAO,CAAC;IACjE,CAAC,MAAM;MACLD,OAAO,CAACE,GAAG,CAAC,yCAAyC,EAAEZ,IAAI,CAAC;IAC9D;EACF,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,6DAA6D;IAAAC,QAAA,eAC1EjB,OAAA,CAACH,MAAM;MAACqB,WAAW,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACC,EAAA,GAzBItB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}