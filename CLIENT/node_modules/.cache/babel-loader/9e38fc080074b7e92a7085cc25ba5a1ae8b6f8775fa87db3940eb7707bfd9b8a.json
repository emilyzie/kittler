{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movieName, setMovieName] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  // Function to load movies from the database\n  const loadMovies = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('movies').select('*');\n    if (error) {\n      console.error('Error fetching movies', error);\n    } else {\n      setMovies(data);\n    }\n  };\n\n  // Handler to add a new movie\n  const addMovie = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('movies').insert([{\n      title: movieName\n    }]);\n    if (error) {\n      console.error('Error adding movie', error);\n    } else {\n      setMovies([...movies, data[0]]);\n      setMovieName(''); // Reset the input field\n    }\n  };\n  useEffect(() => {\n    loadMovies(); // Load movies when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter movie name\",\n      value: movieName,\n      onChange: e => setMovieName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMovie,\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rckDM3UNbB0apEFDrgu6Fs5zfsk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","supabase","MovieCard","jsxDEV","_jsxDEV","App","_s","movieName","setMovieName","movies","setMovies","loadMovies","data","error","from","select","console","addMovie","insert","title","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","movie","id","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport MovieCard from './MovieCard';\n\nfunction App() {\n  const [movieName, setMovieName] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  // Function to load movies from the database\n  const loadMovies = async () => {\n    const { data, error } = await supabase.from('movies').select('*');\n    if (error) {\n      console.error('Error fetching movies', error);\n    } else {\n      setMovies(data);\n    }\n  };\n\n  // Handler to add a new movie\n  const addMovie = async () => {\n    const { data, error } = await supabase.from('movies').insert([{ title: movieName }]);\n    if (error) {\n      console.error('Error adding movie', error);\n    } else {\n      setMovies([...movies, data[0]]);\n      setMovieName(''); // Reset the input field\n    }\n  };\n\n  useEffect(() => {\n    loadMovies(); // Load movies when the component mounts\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter movie name\"\n        value={movieName}\n        onChange={(e) => setMovieName(e.target.value)}\n      />\n      <button onClick={addMovie}>Add Movie</button>\n\n      <div className=\"movie-list\">\n        {movies.map(movie => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;IACjE,IAAIF,KAAK,EAAE;MACTG,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,MAAM;MACLH,SAAS,CAACE,IAAI,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAM;MAAEL,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,QAAQ,CAAC,CAACI,MAAM,CAAC,CAAC;MAAEC,KAAK,EAAEZ;IAAU,CAAC,CAAC,CAAC;IACpF,IAAIM,KAAK,EAAE;MACTG,OAAO,CAACH,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,MAAM;MACLH,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/BJ,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEjB,SAAU;MACjBkB,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEf,QAAS;MAAAI,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7C3B,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBZ,MAAM,CAACwB,GAAG,CAACC,KAAK,iBACf9B,OAAA,CAACF,SAAS;QAAgBgC,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CA9CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}