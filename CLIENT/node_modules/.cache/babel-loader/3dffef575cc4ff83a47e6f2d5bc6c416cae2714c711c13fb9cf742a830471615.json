{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/PostSignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useUser } from '@clerk/clerk-react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostSignUp = () => {\n  _s();\n  const {\n    isLoaded,\n    user\n  } = useUser();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isLoaded && user) {\n      const insertProfile = async () => {\n        const userId = user.id;\n        const email = user.primaryEmailAddress.emailAddress;\n        const username = user.username; // Adjust based on your Clerk setup\n\n        const {\n          error: insertError\n        } = await supabase.from('profiles').insert([{\n          user_id: userId,\n          username: username,\n          email: email\n        }]);\n        if (insertError) {\n          console.error(\"Database insertion error:\", insertError.message);\n          // Handle error (e.g., show a notification or redirect to an error page)\n        } else {\n          console.log('Signup and profile creation successful:', user);\n          navigate(`/profile/${username}`); // Navigate to user profile page\n        }\n      };\n      insertProfile();\n    }\n  }, [isLoaded, user, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostSignUp, \"sPQ4r25sM/DqHERQpHzhGZGBKZM=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = PostSignUp;\nexport default PostSignUp;\nvar _c;\n$RefreshReg$(_c, \"PostSignUp\");","map":{"version":3,"names":["React","useEffect","useUser","useNavigate","supabase","jsxDEV","_jsxDEV","PostSignUp","_s","isLoaded","user","navigate","insertProfile","userId","id","email","primaryEmailAddress","emailAddress","username","error","insertError","from","insert","user_id","console","message","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/PostSignUp.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useUser } from '@clerk/clerk-react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../supabaseClient';\n\nconst PostSignUp = () => {\n  const { isLoaded, user } = useUser();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoaded && user) {\n      const insertProfile = async () => {\n        const userId = user.id;\n        const email = user.primaryEmailAddress.emailAddress;\n        const username = user.username; // Adjust based on your Clerk setup\n\n        const { error: insertError } = await supabase\n          .from('profiles')\n          .insert([\n            { user_id: userId, username: username, email: email }\n          ]);\n\n        if (insertError) {\n          console.error(\"Database insertion error:\", insertError.message);\n          // Handle error (e.g., show a notification or redirect to an error page)\n        } else {\n          console.log('Signup and profile creation successful:', user);\n          navigate(`/profile/${username}`); // Navigate to user profile page\n        }\n      };\n\n      insertProfile();\n    }\n  }, [isLoaded, user, navigate]);\n\n  return (\n    <div>\n      <p>Loading...</p>\n    </div>\n  );\n};\n\nexport default PostSignUp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EACpC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,IAAIC,IAAI,EAAE;MACpB,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,MAAMC,MAAM,GAAGH,IAAI,CAACI,EAAE;QACtB,MAAMC,KAAK,GAAGL,IAAI,CAACM,mBAAmB,CAACC,YAAY;QACnD,MAAMC,QAAQ,GAAGR,IAAI,CAACQ,QAAQ,CAAC,CAAC;;QAEhC,MAAM;UAAEC,KAAK,EAAEC;QAAY,CAAC,GAAG,MAAMhB,QAAQ,CAC1CiB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,CACN;UAAEC,OAAO,EAAEV,MAAM;UAAEK,QAAQ,EAAEA,QAAQ;UAAEH,KAAK,EAAEA;QAAM,CAAC,CACtD,CAAC;QAEJ,IAAIK,WAAW,EAAE;UACfI,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEC,WAAW,CAACK,OAAO,CAAC;UAC/D;QACF,CAAC,MAAM;UACLD,OAAO,CAACE,GAAG,CAAC,yCAAyC,EAAEhB,IAAI,CAAC;UAC5DC,QAAQ,CAAE,YAAWO,QAAS,EAAC,CAAC,CAAC,CAAC;QACpC;MACF,CAAC;MAEDN,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACH,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAE9B,oBACEL,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,UAAU;EAAA,QACaL,OAAO,EACjBC,WAAW;AAAA;AAAA6B,EAAA,GAFxBzB,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}