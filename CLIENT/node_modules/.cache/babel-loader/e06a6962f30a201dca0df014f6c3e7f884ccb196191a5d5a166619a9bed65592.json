{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\n// HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient'; // Make sure the path matches where you set up the client\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n\n  // Fetch movies when component mounts\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('movies').select();\n    if (error) console.log('Error fetching movies:', error);else setMovies(data);\n  };\n  const addMovie = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('movies').insert([{\n      title: newTitle,\n      imageUrl: 'default-image-url'\n    }]);\n    if (error) console.log('Error adding movie:', error);else setMovies([...movies, data[0]]);\n    setNewTitle('');\n  };\n  const removeMovie = async id => {\n    const {\n      error\n    } = await supabase.from('movies').delete().match({\n      id\n    });\n    if (error) console.log('Error removing movie:', error);else setMovies(movies.filter(movie => movie.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-10 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl mb-6\",\n      children: \"Media Consumption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTitle,\n      onChange: e => setNewTitle(e.target.value),\n      placeholder: \"Enter movie title\",\n      className: \"border border-gray-300 p-2 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMovie,\n      className: \"ml-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        ...movie,\n        onRemove: removeMovie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"KdnBdDyXpCWRim1Y6AiQcqpgpLA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","MovieCard","jsxDEV","_jsxDEV","HomePage","_s","movies","setMovies","newTitle","setNewTitle","fetchMovies","data","error","from","select","console","log","addMovie","insert","title","imageUrl","removeMovie","id","delete","match","filter","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","onRemove","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/HomePage.js"],"sourcesContent":["// HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';  // Make sure the path matches where you set up the client\nimport MovieCard from './MovieCard';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n\n  // Fetch movies when component mounts\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    const { data, error } = await supabase.from('movies').select();\n    if (error) console.log('Error fetching movies:', error);\n    else setMovies(data);\n  };\n\n  const addMovie = async () => {\n    const { data, error } = await supabase\n      .from('movies')\n      .insert([{ title: newTitle, imageUrl: 'default-image-url' }]);\n    if (error) console.log('Error adding movie:', error);\n    else setMovies([...movies, data[0]]);\n    setNewTitle('');\n  };\n\n  const removeMovie = async (id) => {\n    const { error } = await supabase\n      .from('movies')\n      .delete()\n      .match({ id });\n    if (error) console.log('Error removing movie:', error);\n    else setMovies(movies.filter(movie => movie.id !== id));\n  };\n\n  return (\n    <div className=\"container mx-auto mt-10 px-4\">\n      <h1 className=\"text-2xl mb-6\">Media Consumption</h1>\n      <input\n        type=\"text\"\n        value={newTitle}\n        onChange={(e) => setNewTitle(e.target.value)}\n        placeholder=\"Enter movie title\"\n        className=\"border border-gray-300 p-2 rounded\"\n      />\n      <button onClick={addMovie} className=\"ml-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n        Add Movie\n      </button>\n      <div>\n        {movies.map(movie => (\n          <MovieCard key={movie.id} {...movie} onRemove={removeMovie} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}