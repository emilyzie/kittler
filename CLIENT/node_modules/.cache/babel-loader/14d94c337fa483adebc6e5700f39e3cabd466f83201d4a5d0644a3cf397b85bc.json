{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const [newMedia, setNewMedia] = useState('');\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchMediaItems();\n  }, []);\n  console.log('WATCHLISTNAME:', username, watchlistName);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist,\n      error: watchlistError\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    console.log(\"WATCHLIST ID: \", watchlist.id);\n    if (watchlistError) {\n      console.error('Error fetching watchlist ID:', watchlistError.message);\n      return;\n    }\n    const {\n      data: media,\n      error: mediaError\n    } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id);\n    if (mediaError) {\n      console.error('Error fetching media items:', mediaError.message);\n    } else {\n      setMediaItems(media);\n    }\n  };\n  const addMediaItem = async () => {\n    if (!newMedia) return;\n    const {\n      data: watchlist,\n      error: watchlistError\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlistError) {\n      console.error('Error fetching watchlist ID:', watchlistError.message);\n      return;\n    }\n    const {\n      data,\n      error\n    } = await supabase.from('media_items').insert([{\n      title: newMedia,\n      watchlist_id: watchlist.id\n    }]);\n    if (error) {\n      console.error('Error adding media item:', error.message);\n    } else {\n      setMediaItems([...mediaItems, ...data]);\n      setNewMedia('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 border-b\",\n      children: item.title\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMedia,\n      onChange: e => setNewMedia(e.target.value),\n      placeholder: \"Add New Media\",\n      className: \"border p-2 mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMediaItem,\n      className: \"ml-2 bg-blue-500 text-white p-2 rounded\",\n      children: \"Add Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"0NlXrk6G+Zn34Ci05Usd3TmIOy8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","supabase","jsxDEV","_jsxDEV","MediaPage","_s","mediaItems","setMediaItems","newMedia","setNewMedia","username","watchlistName","navigate","fetchMediaItems","console","log","data","watchlist","error","watchlistError","from","select","eq","single","id","message","media","mediaError","addMediaItem","insert","title","watchlist_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const [newMedia, setNewMedia] = useState('');\n    const { username, watchlistName } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, []);\n\n    console.log('WATCHLISTNAME:', username, watchlistName);\n    const fetchMediaItems = async () => {\n        const { data: watchlist, error: watchlistError } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n    console.log(\"WATCHLIST ID: \", watchlist.id);\n\n        if (watchlistError) {\n            console.error('Error fetching watchlist ID:', watchlistError.message);\n            return;\n        }\n\n        const { data: media, error: mediaError } = await supabase\n            .from('media_items')\n            .select('*')\n            .eq('watchlist_id', watchlist.id);\n\n        if (mediaError) {\n            console.error('Error fetching media items:', mediaError.message);\n        } else {\n            setMediaItems(media);\n        }\n    };\n\n    const addMediaItem = async () => {\n        if (!newMedia) return;\n\n        const { data: watchlist, error: watchlistError } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlistError) {\n            console.error('Error fetching watchlist ID:', watchlistError.message);\n            return;\n        }\n\n        const { data, error } = await supabase\n            .from('media_items')\n            .insert([{ title: newMedia, watchlist_id: watchlist.id }]);\n\n        if (error) {\n            console.error('Error adding media item:', error.message);\n        } else {\n            setMediaItems([...mediaItems, ...data]);\n            setNewMedia('');\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            {mediaItems.map((item) => (\n                <div key={item.id} className=\"p-2 border-b\">\n                    {item.title}\n                </div>\n            ))}\n            <input\n                type=\"text\"\n                value={newMedia}\n                onChange={(e) => setNewMedia(e.target.value)}\n                placeholder=\"Add New Media\"\n                className=\"border p-2 mt-4\"\n            />\n            <button onClick={addMediaItem} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n                Add Media\n            </button>\n        </div>\n    );\n};\n\nexport default MediaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}