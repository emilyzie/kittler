{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/WatchlistPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchlistPage = () => {\n  _s();\n  const [watchlists, setWatchlists] = useState([]);\n  const [watchlistName, setWatchlistName] = useState('');\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      const {\n        data: profile,\n        error\n      } = await supabase.from('profiles').select('username').eq('user_id', user.id).single();\n      if (error) {\n        console.error('Error fetching user data:', error.message);\n        navigate('/');\n      } else {\n        setUsername(profile.username);\n        fetchWatchlists(user.id);\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const fetchWatchlists = async userId => {\n    const {\n      data,\n      error\n    } = await supabase.from('watchlists').select('*').eq('user_id', userId);\n    if (error) {\n      console.error('Error fetching watchlists:', error.message);\n    } else {\n      setWatchlists(data);\n    }\n  };\n  const createWatchlist = async () => {\n    if (!watchlistName) return;\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    const {\n      data,\n      error\n    } = await supabase.from('watchlists').insert([{\n      name: watchlistName,\n      user_id: user.id\n    }]);\n    if (error) {\n      console.error('Error creating watchlist:', error.message);\n    } else {\n      setWatchlists([...watchlists, ...data]); // Update local state with new watchlist\n      navigate(`/${username}/${watchlistName}`);\n      setWatchlistName(''); // Clear the field after creation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: \"Your Watchlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), watchlists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-blue-500 hover:text-blue-600\",\n        onClick: () => navigate(`/${username}/${list.name}`),\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, list.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: watchlistName,\n        onChange: e => setWatchlistName(e.target.value),\n        placeholder: \"Enter Watchlist Name\",\n        className: \"border p-2 mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createWatchlist,\n        className: \"ml-2 bg-blue-500 text-white p-2 rounded\",\n        children: \"Create Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(WatchlistPage, \"+c2l9H2l2DWH5sTl5Wbks585WWQ=\", false, function () {\n  return [useNavigate];\n});\n_c = WatchlistPage;\nexport default WatchlistPage;\nvar _c;\n$RefreshReg$(_c, \"WatchlistPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","supabase","jsxDEV","_jsxDEV","WatchlistPage","_s","watchlists","setWatchlists","watchlistName","setWatchlistName","username","setUsername","navigate","fetchUserData","data","user","auth","getUser","profile","error","from","select","eq","id","single","console","message","fetchWatchlists","userId","createWatchlist","insert","name","user_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","list","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/WatchlistPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\n\nconst WatchlistPage = () => {\n    const [watchlists, setWatchlists] = useState([]);\n    const [watchlistName, setWatchlistName] = useState('');\n    const [username, setUsername] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchUserData = async () => {\n            const { data: { user } } = await supabase.auth.getUser();\n\n            if (!user) {\n                navigate('/login');\n                return;\n            }\n\n            const { data: profile, error } = await supabase\n                .from('profiles')\n                .select('username')\n                .eq('user_id', user.id)\n                .single();\n\n            if (error) {\n                console.error('Error fetching user data:', error.message);\n                navigate('/');\n            } else {\n                setUsername(profile.username);\n                fetchWatchlists(user.id);\n            }\n        };\n\n        fetchUserData();\n    }, [navigate]);\n\n    const fetchWatchlists = async (userId) => {\n        const { data, error } = await supabase\n            .from('watchlists')\n            .select('*')\n            .eq('user_id', userId);\n\n        if (error) {\n            console.error('Error fetching watchlists:', error.message);\n        } else {\n            setWatchlists(data);\n        }\n    };\n\n    const createWatchlist = async () => {\n        if (!watchlistName) return;\n\n        const { data: { user } } = await supabase.auth.getUser();\n        const { data, error } = await supabase\n            .from('watchlists')\n            .insert([{ name: watchlistName, user_id: user.id }]);\n\n        if (error) {\n            console.error('Error creating watchlist:', error.message);\n        } else {\n            setWatchlists([...watchlists, ...data]); // Update local state with new watchlist\n            navigate(`/${username}/${watchlistName}`);\n            setWatchlistName(''); // Clear the field after creation\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">Your Watchlists</h1>\n            {watchlists.map((list) => (\n                <div key={list.id} className=\"p-2 border-b\">\n                    <button className=\"text-blue-500 hover:text-blue-600\" onClick={() => navigate(`/${username}/${list.name}`)}>\n                        {list.name}\n                    </button>\n                </div>\n            ))}\n            <div>\n                <input\n                    type=\"text\"\n                    value={watchlistName}\n                    onChange={(e) => setWatchlistName(e.target.value)}\n                    placeholder=\"Enter Watchlist Name\"\n                    className=\"border p-2 mt-4\"\n                />\n                <button onClick={createWatchlist} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n                    Create Watchlist\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default WatchlistPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}