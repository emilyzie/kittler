{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\n// HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient'; // Ensure this path matches where you set up the client\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [media, setMovies] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n\n  // Fetch media when component mounts\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('media').select();\n    if (error) console.log('Error fetching media:', error);else setMovies(data);\n  };\n  const addMovie = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('media').insert([{\n      title: newTitle\n    }]);\n    if (error) console.log('Error adding movie:', error);else setMovies([...media, data[0]]);\n    setNewTitle('');\n  };\n  const removeMovie = async id => {\n    const {\n      error\n    } = await supabase.from('media').delete().match({\n      id\n    });\n    if (error) console.log('Error removing movie:', error);else setMovies(media.filter(movie => movie.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-10 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl text-left\",\n      children: \"Media Consumption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"italic mb-5 text-left\",\n      children: \"switch off all apparatuses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTitle,\n      onChange: e => setNewTitle(e.target.value),\n      placeholder: \"Enter title\",\n      className: \"border border-gray-300 p-2 rounded italics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMovie,\n      className: \"ml-2 bg-gray-800 hover:bg-gray-700 hover:font-medium text-white py-2 px-4 rounded\",\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: media.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        ...movie,\n        onRemove: removeMovie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"8c+VqXFe0faxtJoW7j6nkvQN9v0=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","MovieCard","jsxDEV","_jsxDEV","HomePage","_s","media","setMovies","newTitle","setNewTitle","fetchMovies","data","error","from","select","console","log","addMovie","insert","title","removeMovie","id","delete","match","filter","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","onRemove","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/HomePage.js"],"sourcesContent":["// HomePage.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';  // Ensure this path matches where you set up the client\nimport MovieCard from './MovieCard';\n\nfunction HomePage() {\n  const [media, setMovies] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n\n  // Fetch media when component mounts\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    const { data, error } = await supabase.from('media').select();\n    if (error) console.log('Error fetching media:', error);\n    else setMovies(data);\n  };\n\n  const addMovie = async () => {\n    const { data, error } = await supabase\n      .from('media')\n      .insert([{ title: newTitle }]);\n    if (error) console.log('Error adding movie:', error);\n    else setMovies([...media, data[0]]);\n    setNewTitle('');\n  };\n\n  const removeMovie = async (id) => {\n    const { error } = await supabase\n      .from('media')\n      .delete()\n      .match({ id });\n    if (error) console.log('Error removing movie:', error);\n    else setMovies(media.filter(movie => movie.id !== id));\n  };\n\n  return (\n    <div className=\"container mx-auto mt-10 px-4\">\n      <h1 className=\"text-2xl text-left\">Media Consumption</h1>\n      <h2 className=\"italic mb-5 text-left\">switch off all apparatuses</h2>\n      <input\n        type=\"text\"\n        value={newTitle}\n        onChange={(e) => setNewTitle(e.target.value)}\n        placeholder=\"Enter title\"\n        className=\"border border-gray-300 p-2 rounded italics\"\n      />\n      <button onClick={addMovie} className=\"ml-2 bg-gray-800 hover:bg-gray-700 hover:font-medium text-white py-2 px-4 rounded\">\n        Add Movie\n      </button>\n\n      <div>\n        {media.map((movie) => (\n          <MovieCard key={movie.id} {...movie} onRemove={removeMovie} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}