{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const [newMedia, setNewMedia] = useState('');\n  const [medium, setMedium] = useState('Movie'); // State for the medium\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchMediaItems();\n  }, [watchlistName]);\n  console.log('WATCHLISTNAME:', username, watchlistName);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist,\n      error: watchlistError\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    console.log(\"WATCHLIST ID: \", watchlist.id);\n    if (watchlistError) {\n      console.error('Error fetching watchlist ID:', watchlistError.message);\n      return;\n    }\n    const {\n      data: media,\n      error: mediaError\n    } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id);\n    if (mediaError) {\n      console.error('Error fetching media items:', mediaError.message);\n    } else {\n      setMediaItems(media);\n    }\n  };\n  const addMediaItem = async () => {\n    if (!newMedia || !medium) return;\n    const {\n      data: watchlist,\n      error: watchlistError\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlistError) {\n      console.error('Error fetching watchlist ID:', watchlistError.message);\n      return;\n    }\n    const {\n      data: newMedium,\n      error\n    } = await supabase.from('media_items').insert([{\n      title: newMedia,\n      watchlist_id: watchlist.id,\n      medium: medium\n    }], {\n      returning: \"representation\"\n    });\n    console.log(\"IS DATA AN ARRAY? : \", newMedium);\n    console.log();\n    console.log(\"Watchlist ID:\", watchlist.id);\n    console.log(\"Medium:\", medium);\n    if (error) {\n      console.error('Error adding media item:', error.message);\n      return;\n    } else {\n      if (Array.isArray(newMedium)) {\n        console.log(\"THIS IS WORKING\");\n        setMediaItems([...mediaItems, ...newMedium]);\n      }\n      setNewMedia('');\n      setMedium('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 border-b\",\n      children: item.title\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMedia,\n      onChange: e => setNewMedia(e.target.value),\n      placeholder: \"Add New Media\",\n      className: \"border p-2 mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: medium,\n      onChange: e => setMedium(e.target.value),\n      className: \"border p-2 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Movie\",\n        children: \"Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Book\",\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"YouTube\",\n        children: \"YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"TV\",\n        children: \"TV Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMediaItem,\n      className: \"ml-2 bg-blue-500 text-white p-2 rounded\",\n      children: \"Add Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"JME8AxPskvDoc9yacacOrY02FV8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","supabase","jsxDEV","_jsxDEV","MediaPage","_s","mediaItems","setMediaItems","newMedia","setNewMedia","medium","setMedium","username","watchlistName","navigate","fetchMediaItems","console","log","data","watchlist","error","watchlistError","from","select","eq","single","id","message","media","mediaError","addMediaItem","newMedium","insert","title","watchlist_id","returning","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const [newMedia, setNewMedia] = useState('');\n    const [medium, setMedium] = useState('Movie'); // State for the medium\n    const { username, watchlistName } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, [watchlistName]);\n\n    console.log('WATCHLISTNAME:', username, watchlistName);\n    \n    const fetchMediaItems = async () => {\n        const { data: watchlist, error: watchlistError } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n    console.log(\"WATCHLIST ID: \", watchlist.id);\n\n        if (watchlistError) {\n            console.error('Error fetching watchlist ID:', watchlistError.message);\n            return;\n        }\n\n        const { data: media, error: mediaError } = await supabase\n            .from('media_items')\n            .select('*')\n            .eq('watchlist_id', watchlist.id);\n\n        if (mediaError) {\n            console.error('Error fetching media items:', mediaError.message);\n        } else {\n            setMediaItems(media);\n        }\n    };\n\n    const addMediaItem = async () => {\n        if (!newMedia || !medium) return;\n\n        const { data: watchlist, error: watchlistError } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlistError) {\n            console.error('Error fetching watchlist ID:', watchlistError.message);\n            return;\n        }\n\n        const { data: newMedium, error } = await supabase\n            .from('media_items')\n            .insert([{ title: newMedia, watchlist_id: watchlist.id, medium: medium }], { returning: \"representation\" });\n\n            console.log(\"IS DATA AN ARRAY? : \", newMedium);\n            console.log()\n            console.log(\"Watchlist ID:\", watchlist.id);\n            console.log(\"Medium:\", medium);\n\n        if (error) {\n            console.error('Error adding media item:', error.message);\n            return;\n        } else {\n\n            if (Array.isArray(newMedium)) {\n                console.log(\"THIS IS WORKING\")\n                setMediaItems([...mediaItems, ...newMedium]);\n            }\n            setNewMedia('');\n            setMedium('');\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            {mediaItems.map((item) => (\n                <div key={item.id} className=\"p-2 border-b\">\n                    {item.title}\n                </div>\n            ))}\n            <input\n                type=\"text\"\n                value={newMedia}\n                onChange={(e) => setNewMedia(e.target.value)}\n                placeholder=\"Add New Media\"\n                className=\"border p-2 mt-4\"\n            />\n\n            <select\n                value={medium}\n                onChange={(e) => setMedium(e.target.value)}\n                className=\"border p-2 mt-4\"\n            >\n                <option value=\"\">Select Medium</option>\n                <option value=\"Movie\">Movie</option>\n                <option value=\"Book\">Book</option>\n                <option value=\"YouTube\">YouTube</option>\n                <option value=\"TV\">TV Show</option>\n            </select>\n\n            <button onClick={addMediaItem} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n                Add Media\n            </button>\n        </div>\n    );\n};\n\nexport default MediaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}